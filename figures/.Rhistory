dt3 = dt2[ EXTERNAL_PERMIT_NMBR %in% plants_ids ]
dt4 = dt3[ LIMIT_VALUE_NMBR <= DMR_VALUE_NMBR ]
View(dt4)
dt3 = dt2[ EXTERNAL_PERMIT_NMBR %like% plants_ids ]
dt3 = dt2[ EXTERNAL_PERMIT_NMBR %in% plants_ids ]
dt4 = dt3[ LIMIT_VALUE_NMBR <= DMR_VALUE_NMBR ]
strsplit(plants_ids, "\\s+")
plants_ids = strsplit(plants_ids, "\\s+")
dt3 = dt2[ EXTERNAL_PERMIT_NMBR %in% plants_ids ]
dt4 = dt3[ LIMIT_VALUE_NMBR <= DMR_VALUE_NMBR ]
View(dt4)
plants = fac[NPDES_IDS == 'CT0030180']
plants = fac[FAC_SIC_CODES == '4911']
View(plants)
View(plants_ids)
plants_ids[[1]]
plants_ids[1]
rbindlist(plants_ids)
plants_ids = levels(factor(plants[, NPDES_IDS]))
View(plants)
View(plants)
plants_ids = strsplit(plants_ids, "\\s+")
View(plants_ids)
reduce(c,plants_ids)
library(tidyverse)
plants_ids %>% reduce(c) %>% unique
plants_ids = plants_ids %>% reduce(c) %>% unique
dt3 = dt2[ EXTERNAL_PERMIT_NMBR %in% plants_ids ]
dt4 = dt3[ LIMIT_VALUE_NMBR <= DMR_VALUE_NMBR ]
View(dt4)
dtex = dt2[ EXTERNAL_PERMIT_NMBR == 'CT0030180']
View(dtex)
dtex = dt4[ EXTERNAL_PERMIT_NMBR == 'CT0030180']
View(dtex)
explant = plants[NPDES_IDS %like% 'CT0030180']
View(explant)
explant[, DFR_URL]
data_dir = '/Users/MEAS/GitHub/lifecycle-coal/output'
data_fil = 'water-flow_production-to-generation_region-ba_2017.csv'
ba_fil = 'water-flow_generation-to-consumption_ba_2017.csv'
plot_dir = '/Users/MEAS/GitHub/lifecycle-coal/figures'
data_dir = '/Users/MEAS/GitHub/lifecycle-coal/output'
data_fil = 'water-flow_production-to-generation_region-ba_2017.csv'
ba_fil = 'water-flow_generation-to-consumption_ba_2017.csv'
plot_dir = '/Users/MEAS/GitHub/lifecycle-coal/figures'
library(ggplot2)
library(ggalluvial)
library(hrbrthemes)
library(yarrr)
library(ggrepel)
library(ggsci)
library(data.table)
library(extrafont)
# read in data
setwd(data_dir)
dt = fread(data_fil, header = TRUE)
dt = dt[! (grubert_region == 'Imported' | ba_code == 'HICC')]
links = dt[, .(coalcons_gj = sum(coalcons_gj),
mining_cons_m3 = sum(mining_cons_m3),
prep_cons_m3 = sum(prep_cons_m3),
prep_with_m3 = sum(prep_with_m3)),
by=list(grubert_region, ba_code, coal_type)]
links[, subject := c(1:nrow(links))]
links[, colorvar := grubert_region]
# melt flow
links = melt(links,
id.vars = c("coal_type", 'subject', 'coalcons_gj', 'mining_cons_m3', 'prep_cons_m3', 'prep_with_m3'),
measure.vars = c('grubert_region', 'ba_code'),
variable.name = "survey", value.name = "response")
links[, response_labels := response]
links[response == 'Appalachia/Eastern', response_labels := 'Appalachia/\n Eastern']
links[response == 'Northern Great Plains', response_labels := 'Northern Great \n Plains']
links[response == 'Rocky Mountain Region', response_labels := 'Rocky Mountain \n Region']
setwd(data_dir)
reg_cols = pal_nejm("default")(7)
reg_cols = setNames(reg_cols, c("Appalachia/Eastern", "Gulf Coast",
"Interior", "Northern Great Plains",
"Rocky Mountain Region", "Imported", "Unknown"))
bas = fread(ba_fil, header = TRUE)
bas = bas[, c('ba_from', 'ba_to', 'coalgen_mwh')]
colnames(bas) = c('from', 'to', 'value')
ba_names = unique(c(bas[from != to][, from], bas[from != to][, to]))
ba_names = sort(ba_names)
pal2 = rep(unname(piratepal(palette = "info2")),8)[1:75]
pal2 = setNames(pal2, ba_names)
pal2['LDWP'] = "#D86C4FFF"
pal2['GVL'] = "#5A5895FF"
pal = c(reg_cols, pal2)
energy = ggplot(links,
aes(x = survey, stratum = response, alluvium = subject,
y = coalcons_gj/1e9)) +
geom_stratum(alpha = 1, width = 1/3, aes(fill = response, colour = NA)) +
geom_flow(alpha = 0.7, aes(fill = response)) +
labs(x = NULL,
y = expression(10^{9}~Gigajoules),
title = 'Coal Energy Consumed for Electricity') +
scale_fill_manual(values = pal) +
scale_x_discrete(labels = c('Mining Region', 'Balancing Authority'), expand = c(0.6,0)) +
scale_y_comma(expand = c(0,0)) +
geom_text_repel(aes(label = ifelse(survey == 'grubert_region',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 5.6, direction = "y", nudge_x = -0.5) +
geom_text_repel(aes(label = ifelse(survey == 'ba_code',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 4, direction = "y", nudge_x = 0.3) +
scale_color_manual(values = pal) +
theme_ipsum(grid = '', base_family = 'Secca Soft', axis_title_just = "center", plot_title_size = 26,
axis_title_size = 24, axis_text_size = 22, strip_text_size = 20) +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.y = element_line(color = "#9e9e9e"),
plot.margin = margin(0.4, 0.4, 0.4, 0.4, "cm"))
energy
minewc = ggplot(links,
aes(x = survey, stratum = response, alluvium = subject,
y = mining_cons_m3/1e6)) +
geom_stratum(alpha = 1, width = 1/3, aes(fill = response, colour = NA)) +
geom_flow(alpha = 0.7, aes(fill = response)) +
labs(x = NULL,
y = expression(10^{6}~Cubic Meters),
minewc = ggplot(links,
aes(x = survey, stratum = response, alluvium = subject,
y = mining_cons_m3/1e6)) +
geom_stratum(alpha = 1, width = 1/3, aes(fill = response, colour = NA)) +
geom_flow(alpha = 0.7, aes(fill = response)) +
labs(x = NULL,
y = expression(10^{6}~Cubic~Meters),
title = 'Water Consumed for Mining Coal') +
scale_fill_manual(values = pal) +
scale_x_discrete(labels = c('Mining Region', 'Balancing Authority'), expand = c(0.6,0)) +
scale_y_comma(expand = c(0,0)) +
geom_text_repel(aes(label = ifelse(survey == 'grubert_region',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 5.6, direction = "y", nudge_x = -0.5) +
geom_text_repel(aes(label = ifelse(survey == 'ba_code',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 4, direction = "y", nudge_x = 0.3) +
scale_color_manual(values = pal) +
theme_ipsum(grid = '', base_family = 'Secca Soft', axis_title_just = "center", plot_title_size = 26,
axis_title_size = 24, axis_text_size = 22, strip_text_size = 20) +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.y = element_line(color = "#9e9e9e"),
plot.margin = margin(0.4, 0.4, 0.4, 0.4, "cm"))
minewc
prepwc = ggplot(links,
aes(x = survey, stratum = response, alluvium = subject,
y = prep_cons_m3/1e6)) +
geom_stratum(alpha = 1, width = 1/3, aes(fill = response, colour = NA)) +
geom_flow(alpha = 0.7, aes(fill = response)) +
labs(x = NULL,
y = expression(10^{6}~Cubic~Meters),
title = 'Water Consumed for Preparing Coal') +
scale_fill_manual(values = pal) +
scale_x_discrete(labels = c('Mining Region', 'Balancing Authority'), expand = c(0.6,0)) +
scale_y_comma(expand = c(0,0)) +
geom_text_repel(aes(label = ifelse(survey == 'grubert_region',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 5.6, direction = "y", nudge_x = -0.5) +
geom_text_repel(aes(label = ifelse(survey == 'ba_code',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 4, direction = "y", nudge_x = 0.3) +
scale_color_manual(values = pal) +
theme_ipsum(grid = '', base_family = 'Secca Soft', axis_title_just = "center", plot_title_size = 26,
axis_title_size = 24, axis_text_size = 22, strip_text_size = 20) +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.y = element_line(color = "#9e9e9e"),
plot.margin = margin(0.4, 0.4, 0.4, 0.4, "cm"))
prepwc
prepww = ggplot(links,
aes(x = survey, stratum = response, alluvium = subject,
y = prep_with_m3/1e6)) +
geom_stratum(alpha = 1, width = 1/3, aes(fill = response, colour = NA)) +
geom_flow(alpha = 0.7, aes(fill = response)) +
labs(x = NULL,
y = expression(10^{6}~Cubic~Meters),
title = 'Water Withdrawn for Preparing Coal') +
scale_fill_manual(values = pal) +
scale_x_discrete(labels = c('Mining Region', 'Balancing Authority'), expand = c(0.6,0)) +
scale_y_comma(expand = c(0,0)) +
geom_text_repel(aes(label = ifelse(survey == 'grubert_region',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 5.6, direction = "y", nudge_x = -0.5) +
geom_text_repel(aes(label = ifelse(survey == 'ba_code',
as.character(response_labels), NA),
family = "Secca Soft",
color = response),
stat = "stratum", size = 4, direction = "y", nudge_x = 0.3) +
scale_color_manual(values = pal) +
theme_ipsum(grid = '', base_family = 'Secca Soft', axis_title_just = "center", plot_title_size = 26,
axis_title_size = 24, axis_text_size = 22, strip_text_size = 20) +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.y = element_line(color = "#9e9e9e"),
plot.margin = margin(0.4, 0.4, 0.4, 0.4, "cm"))
prepww
# setwd(plot_dir)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"),
plot = energy,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"),
plot = minewc,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"),
plot = prepwc,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"),
plot = prepww,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"))
# setwd(plot_dir)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.png"),
plot = energy,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.png"),
plot = minewc,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.png"),
plot = prepwc,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.png"),
plot = prepww,
width = 9,
height = 13.5,
dpi = 800)
# setwd(plot_dir)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.png"),
plot = energy,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.png"),
plot = minewc,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.png"),
plot = prepwc,
width = 9,
height = 13.5,
dpi = 800)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.png"),
plot = prepww,
width = 9,
height = 13.5,
dpi = 800)
# setwd(plot_dir)
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"),
plot = energy,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_energy.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"),
plot = minewc,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_minewc.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"),
plot = prepwc,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_prepwc.pdf"))
ggsave(filename = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"),
plot = prepww,
width = 9,
height = 13.5,
dpi = 800)
embed_fonts(paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"),
outfile = paste0(plot_dir, '/', "alluv_mining-to-generating_prepww.pdf"))
library(data.table)
dt = fread('/Users/MEAS/Google Drive/data/epa/echo/compare-echo-eia_2011-2018.csv')
View(dt)
levels(factor(dt[, statistical_base_short_desc]))
momax = dt[ statistical_base_short_desc == 'MO MAX']
View(momax)
momax dt[ limit_unit_desc == "deg C", dmr_value_nmbr := dmr_value_nmbr*(9/5) + 32]
momax[ limit_unit_desc == "deg C", dmr_value_nmbr := dmr_value_nmbr*(9/5) + 32]
View(momax)
momax[ limit_unit_desc == "deg C", limit_unit_desc := "deg F"]
View(momax)
momax = dt[ statistical_base_short_desc == 'MO MAX']
View(momax)
momax = momax[ limit_unit_desc == "deg F" ]
View(momax)
library(ggplot2)
ggplot(momax, aes(x = discharge_max, y = dmr_value_nmbr)) + geom_point()
library(hrbrthemes)
ggplot(momax, aes(x = discharge_max, y = dmr_value_nmbr)) + geom_point() +
theme_ipsum_rc()
str(momax)
momax[, discharge_max := as.numeric(discharge_max)]
ggplot(momax, aes(x = discharge_max, y = dmr_value_nmbr)) + geom_point() +
theme_ipsum_rc()
View(dt)
daymax = dt[ statistical_base_short_desc == 'DAILY MX	']
View(daymax)
daymax = dt[ statistical_base_short_desc == 'DAILY MX']
View(daymax)
(113.00+90.1)/2
library(data.table)
library(ggplot2)
library(hrbrthemes)
dt = fread('/Users/MEAS/Google Drive/data/epa/echo/compare-echo-eia_2011-2018.csv')
momax = dt[ statistical_base_short_desc == 'MO MAX']
momax = momax[ limit_unit_desc == "deg F" ]
momax[, discharge_max := as.numeric(discharge_max)]
ggplot(momax, aes(x = discharge_max, y = dmr_value_nmbr)) + geom_point() +
theme_ipsum_rc()
daymax = dt[ statistical_base_short_desc == 'DAILY MX']
View(momax)
View(daymax)
# ---------------------------------------------------------------
# INPUT DATA ----------------------------------------------------
# ---------------------------------------------------------------
data.loc      = '/data_2017-2018' # location of data file(s)
data.file     = 'Table_1.3_Primary_Energy_Consumption_by_Source.xlsx' # data file to be used
out.loc       = '/figures' # location of where to save figures
source.cols   = c("Geothermal" = "#6a3d9a",
"Solar" = "#ff7f00",
"Waste" = "#858585",
"Biomass" = "#8c613c",
"Wind" = "#1f78b4",
"Hydroelectric" = "#a6cee3",
"Nuclear" = "#55a868",
"Petroleum" = "#fdbf6f",
"Coal" = "#12253d",
"Natural Gas" = "#c44e52",
"Total Primary Energy" = "#fc8d62",
"Total Fossil Fuels" = "#383e56",
"Total Renewable Energy" = "#66c2a5")
# ---------------------------------------------------------------
# MAIN SCRIPT ---------------------------------------------------
# ---------------------------------------------------------------
# load libraries -------
library(data.table)
library(openxlsx)
library(ggplot2)
library(hrbrthemes)
library(stringr)
library(plyr)
library(directlabels)
library(grid)
library(rstudioapi)
# get file location as working directory -----
current.fil = getActiveDocumentContext()$path
current.loc = dirname(current.fil)
setwd(dirname(current.fil))
setwd(paste0(current.loc, data.loc))
setwd(data.loc)
setwd(paste0(current.loc, data.loc))
dt_month = as.data.table(read.xlsx(data.file, sheet = "Monthly Data", startRow = 11, detectDates = T))
dt_month = dt_month[2:nrow(dt_month)]
dt_annual = as.data.table(read.xlsx(data.file, sheet = "Annual Data", startRow = 11, detectDates = T))
dt_annual = dt_annual[2:nrow(dt_annual)]
colnames(dt_annual)[1] = c("Year")
dt_month = melt(dt_month, measure.vars = colnames(dt_month)[2:13],
variable.name = "MSN", value.name = "Value")
dt_annual = melt(dt_annual, measure.vars = colnames(dt_annual)[2:13],
variable.name = "MSN", value.name = "Value")
dt_month[, MSN := revalue(MSN, c('Biomass.Energy.Consumption' = "Biomass",
'Coal.Consumption' = "Coal",
'Total.Fossil.Fuels.Consumption' = "Total Fossil Fuels",
'Geothermal.Energy.Consumption' = "Geothermal",
'Hydroelectric.Power.Consumption' = "Hydroelectric",
'Natural.Gas.Consumption.(Excluding.Supplemental.Gaseous.Fuels)' = "Natural Gas",
'Nuclear.Electric.Power.Consumption' = "Nuclear",
'Petroleum.Consumption.(Excluding.Biofuels)' = "Petroleum",
'Solar.Energy.Consumption' = "Solar",
'Wind.Energy.Consumption' = "Wind",
'Total.Renewable.Energy.Consumption' = "Total Renewable Energy",
'Total.Primary.Energy.Consumption' = "Total Primary Energy" ))]
dt_annual[, MSN := revalue(MSN, c('Biomass.Energy.Consumption' = "Biomass",
'Coal.Consumption' = "Coal",
'Total.Fossil.Fuels.Consumption' = "Total Fossil Fuels",
'Geothermal.Energy.Consumption' = "Geothermal",
'Hydroelectric.Power.Consumption' = "Hydroelectric",
'Natural.Gas.Consumption.(Excluding.Supplemental.Gaseous.Fuels)' = "Natural Gas",
'Nuclear.Electric.Power.Consumption' = "Nuclear",
'Petroleum.Consumption.(Excluding.Biofuels)' = "Petroleum",
'Solar.Energy.Consumption' = "Solar",
'Wind.Energy.Consumption' = "Wind",
'Total.Renewable.Energy.Consumption' = "Total Renewable Energy",
'Total.Primary.Energy.Consumption' = "Total Primary Energy" ))]
dt_month[, Value := as.numeric(Value)]
dt_annual[, Value := as.numeric(Value)]
dt_month = dt_month[!is.na(Month)]
dt_annual = dt_annual[!is.na(Year)]
setwd(out.loc)
setwd(paste0(current.loc, out.loc))
getwd()
dt = dt_annual[! MSN %in% c("Total Fossil Fuels",
"Total Renewable Energy",
"Total Primary Energy")][, MSN := factor(MSN, levels = c("Wind",
"Solar",
"Geothermal",
"Biomass",
"Hydroelectric",
"Nuclear",
"Natural Gas",
"Petroleum",
"Coal"))]
xval = dt[, Year]
yval = dt[, Value]
fillval = dt[, MSN]
tlab = "Annual U.S. Primary Energy Consumption by Source (1949 - 2017)"
sublab = "Data: U.S. Energy Information Administration"
gval = "Y"
xlab = NULL
ylab = "Quadrillion BTU"
leglab = ""
leg.ord = levels(fillval)
plot.cols = source.cols
area_annual = ggplot(dt, aes(x = xval, y = yval, fill = fillval)) +
geom_area(stat = "identity") +
labs(title = tlab,
subtitle = sublab,
x = xlab,
y = ylab,
fill = leglab) +
theme_ipsum_rc(grid = gval) +
scale_fill_manual(breaks = leg.ord, values = plot.cols) +
scale_x_continuous(breaks = seq(1950,2017,5), expand = c(0,0)) +
scale_y_continuous(expand = c(0.01,0)) +
theme(plot.title = element_text(size = 21, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 15, hjust = 0.5),
axis.title.x = element_text(size = 17, hjust = 0.5, face = "bold"),
axis.title.y = element_text(size = 17, hjust = 0.5, face = "bold"),
axis.text.x = element_text(size = 15, face="bold"),
axis.text.y = element_text(size = 15, face="bold"),
legend.text = element_text(size = 13, face = "bold")) +
theme(plot.margin = unit(c(1,1,1,1), "lines"))
ggsave(area_annual,
filename = "Energy_Primary Energy Consumption by Source_Annual_1949-2017_ATS.png",
width = 11.75,
height = 6.25,
dpi = 400)
line_annual = ggplot(dt, aes(x = xval, y = yval, color = fillval)) +
geom_line(stat = "identity", size = 0.7) +
labs(title = tlab,
subtitle = sublab,
x = xlab,
y = ylab,
color = leglab) +
theme_ipsum_rc(grid = gval) +
scale_color_manual(breaks = leg.ord, values = plot.cols) +
scale_x_continuous(breaks = seq(1950,2017,5), expand = c(0,0)) +
scale_y_continuous(expand = c(0.01,0)) +
geom_dl(aes(label = MSN), method = list(dl.trans(x = x + .3), "last.bumpup", cex = 1.1, fontfamily = "Roboto Condensed")) +
guides(color = FALSE) +
theme(plot.title = element_text(size = 21, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 15, hjust = 0.5),
axis.title.x = element_text(size = 17, hjust = 0.5, face = "bold"),
axis.title.y = element_text(size = 17, hjust = 0.5, face = "bold"),
axis.text.x = element_text(size = 15, face="bold"),
axis.text.y = element_text(size = 15, face="bold"),
legend.text = element_text(size = 13, face = "bold")) +
theme(plot.margin = unit(c(1,8,1,1), "lines"))
# this is to add labels of fuel type on the outside of the plot
line_annual_2 <- ggplotGrob(line_annual)
line_annual_2$layout$clip[line_annual_2$layout$name == "panel"] <- "off"
ggsave(line_annual_2,
filename = "Energy_Primary Energy Consumption by Source_Annual_1949-2017_LTS.png",
width = 11.75,
height = 6.25,
dpi = 400)
source('~/GitHub/ene505-figures/Energy_Primary Energy Consumption by Source.R', echo=TRUE)
